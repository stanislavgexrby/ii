# main.py
"""
TeammateBot - –ë–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–∫–æ–º–∞–Ω–¥–Ω–∏–∫–æ–≤ –≤ Dota 2 –∏ CS2
–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
"""

import asyncio
import logging
import os
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage

from config.settings import Settings
from database.database import Database
from handlers import start, profile, search, likes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    settings = Settings()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if not settings.validate():
        logger.error("‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        return
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = Database()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    bot = Bot(token=settings.BOT_TOKEN)
    dp = Dispatcher(storage=MemoryStorage())
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–æ–≤
    # –í–∞–∂–Ω–æ: —Ä–æ—É—Ç–µ—Ä—ã —Å FSM —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–µ—Ä–≤—ã–º–∏!
    dp.include_router(profile.router)  # FSM –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç
    dp.include_router(search.router)   # FSM –¥–ª—è –ø–æ–∏—Å–∫–∞
    dp.include_router(likes.router)    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∞–π–∫–æ–≤
    dp.include_router(start.router)    # –ö–æ–º–∞–Ω–¥—ã –∏ –æ—Å–Ω–æ–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    
    logger.info("üìã –†–æ—É—Ç–µ—Ä—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
    os.makedirs('data', exist_ok=True)
    
    logger.info("üöÄ TeammateBot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –æ –∑–∞–ø—É—Å–∫–µ
    try:
        stats = db.get_stats()
        await bot.send_message(
            settings.ADMIN_ID, 
            f"ü§ñ TeammateBot —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!\n\n"
            f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
            f"‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}\n"
            f"‚Ä¢ Dota 2: {stats['dota_users']}\n"
            f"‚Ä¢ CS2: {stats['cs_users']}\n"
            f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é: {stats['active_users']}\n"
            f"‚Ä¢ –ú–∞—Ç—á–µ–π: {stats['total_matches']}\n\n"
            f"üéÆ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
        )
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É: {e}")
    
    try:
        # –ó–∞–ø—É—Å–∫ polling
        await dp.start_polling(bot, skip_updates=True)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")