# keyboards/keyboards.py
"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –±–æ—Ç–∞ –ø–æ–∏—Å–∫–∞ —Å–æ–∫–æ–º–∞–Ω–¥–Ω–∏–∫–æ–≤
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import Dict, List
from config.settings import Settings

class Keyboards:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""
    
    def __init__(self):
        self.settings = Settings()
    
    def game_selection(self) -> InlineKeyboardMarkup:
        """–í—ã–±–æ—Ä –∏–≥—Ä—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ"""
        buttons = [
            [InlineKeyboardButton(text="üéÆ Dota 2", callback_data="game_dota")],
            [InlineKeyboardButton(text="üî´ CS2", callback_data="game_cs")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def main_menu(self, has_profile: bool = False) -> InlineKeyboardMarkup:
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        buttons = []
        
        if has_profile:
            buttons.extend([
                [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É", callback_data="edit_profile")],
                [InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫ —Å–æ–∫–æ–º–∞–Ω–¥–Ω–∏–∫–∞", callback_data="search_teammates")],
                [InlineKeyboardButton(text="‚ù§Ô∏è –¢–≤–æ–∏ –ª–∞–π–∫–∏", callback_data="my_likes")],
                [InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É", callback_data="delete_profile")]
            ])
        else:
            buttons.append([InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É", callback_data="create_profile")])
        
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def confirm_subscription(self) -> InlineKeyboardMarkup:
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏"""
        buttons = [
            [InlineKeyboardButton(text="‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_subscription")],
            [InlineKeyboardButton(text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–Ω–æ–≤–∞", callback_data="recheck_subscription")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def rating_options(self, game: str) -> InlineKeyboardMarkup:
        """–û–ø—Ü–∏–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞ –¥–ª—è –∏–≥—Ä—ã"""
        buttons = []
        options = self.settings.get_rating_options(game)
        
        for key, text in options.items():
            buttons.append([InlineKeyboardButton(text=text, callback_data=f"rating_{key}")])
        
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def position_options(self, game: str, multiselect: bool = False, selected: List[str] = None) -> InlineKeyboardMarkup:
        """–û–ø—Ü–∏–∏ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –∏–≥—Ä—ã"""
        if selected is None:
            selected = []
        
        buttons = []
        options = self.settings.get_position_options(game)
        
        for key, text in options.items():
            if multiselect:
                # –î–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
                if key in selected:
                    button_text = f"‚úÖ {text}"
                    callback_data = f"pos_remove_{key}"
                else:
                    button_text = f"‚ùå {text}"
                    callback_data = f"pos_add_{key}"
                buttons.append([InlineKeyboardButton(text=button_text, callback_data=callback_data)])
            else:
                # –î–ª—è –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
                buttons.append([InlineKeyboardButton(text=text, callback_data=f"pos_{key}")])
        
        if multiselect:
            # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
            buttons.append([InlineKeyboardButton(text="‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ", callback_data="separator")])
            
            if len(selected) > 0:
                buttons.append([InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="pos_done")])
            else:
                buttons.append([InlineKeyboardButton(text="‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é", callback_data="pos_need_select")])
            
            buttons.append([InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="pos_cancel")])
        
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def profile_actions(self) -> InlineKeyboardMarkup:
        """–î–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º"""
        buttons = [
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def search_filters(self, game: str) -> InlineKeyboardMarkup:
        """–§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞"""
        buttons = [
            [InlineKeyboardButton(text="üèÜ –í—ã–±—Ä–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥", callback_data="filter_rating")],
            [InlineKeyboardButton(text="‚öîÔ∏è –í—ã–±—Ä–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é", callback_data="filter_position")],
            [InlineKeyboardButton(text="üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫", callback_data="start_search")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def search_actions(self, target_user_id: int) -> InlineKeyboardMarkup:
        """–î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∞–Ω–∫–µ—Ç—ã –≤ –ø–æ–∏—Å–∫–µ"""
        buttons = [
            [
                InlineKeyboardButton(text="üëé –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=f"skip_{target_user_id}"),
                InlineKeyboardButton(text="‚ù§Ô∏è –õ–∞–π–∫", callback_data=f"like_{target_user_id}")
            ],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def like_actions(self, target_user_id: int) -> InlineKeyboardMarkup:
        """–î–µ–π—Å—Ç–≤–∏—è —Å –ª–∞–π–∫–æ–º"""
        buttons = [
            [
                InlineKeyboardButton(text="‚ù§Ô∏è –õ–∞–π–∫ –≤ –æ—Ç–≤–µ—Ç", callback_data=f"like_back_{target_user_id}"),
                InlineKeyboardButton(text="üëé –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=f"skip_like_{target_user_id}")
            ],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def contact_user(self, username: str) -> InlineKeyboardMarkup:
        """–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
        buttons = []
        
        if username:
            buttons.append([InlineKeyboardButton(text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å", url=f"https://t.me/{username}")])
        
        buttons.append([InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")])
        
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def confirm_delete(self) -> InlineKeyboardMarkup:
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã"""
        buttons = [
            [
                InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data="confirm_delete"),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="main_menu")
            ]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def skip_photo(self) -> InlineKeyboardMarkup:
        """–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ"""
        buttons = [
            [InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="skip_photo")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_profile")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def after_like(self) -> InlineKeyboardMarkup:
        """–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–∞–π–∫–∞"""
        buttons = [
            [InlineKeyboardButton(text="üîç –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∏—Å–∫", callback_data="continue_search")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def after_match(self) -> InlineKeyboardMarkup:
        """–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ç—á–∞"""
        buttons = [
            [InlineKeyboardButton(text="üíñ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", callback_data="view_last_match")],
            [InlineKeyboardButton(text="üîç –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∏—Å–∫", callback_data="continue_search")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def no_results(self) -> InlineKeyboardMarkup:
        """–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
        buttons = [
            [InlineKeyboardButton(text="üîç –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", callback_data="search_teammates")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def admin_menu(self) -> InlineKeyboardMarkup:
        """–ê–¥–º–∏–Ω –º–µ–Ω—é"""
        buttons = [
            [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")],
            [InlineKeyboardButton(text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="admin_users")],
            [InlineKeyboardButton(text="üóëÔ∏è –û—á–∏—Å—Ç–∫–∞", callback_data="admin_cleanup")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def back_to_main(self) -> InlineKeyboardMarkup:
        """–ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        buttons = [
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def profile_actions(self) -> InlineKeyboardMarkup:
        """–î–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –ø–æ—Å–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"""
        buttons = [
            [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="edit_profile")],
            [InlineKeyboardButton(text="üîç –ò—Å–∫–∞—Ç—å –∏–≥—Ä–æ–∫–æ–≤", callback_data="search_teammates")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)